import { ReactNode, SyntheticEvent } from 'react';
declare type ClickHandler = (e: SyntheticEvent<HTMLDivElement>) => void | Promise<void>;
export interface ToastOptions {
    time?: number;
    className?: string;
    clickable?: boolean;
    clickClosable?: boolean;
    render?: ((message: string) => ReactNode) | null;
    onClick?: ClickHandler;
}
export interface ConfigArgs extends Pick<ToastOptions, 'time' | 'clickClosable' | 'className' | 'render'> {
    position?: 'left' | 'center' | 'right';
}
export interface ToastProps extends Pick<ToastOptions, 'className' | 'clickable' | 'render' | 'onClick'> {
    message: string;
}
export declare const toastConfig: (options: ConfigArgs) => void;
declare function toast(message: string, time?: number): void;
declare function toast(message: string, options?: ToastOptions): void;
export default toast;
